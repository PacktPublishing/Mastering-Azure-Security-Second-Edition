Id: c34bf507-cedf-4120-bf41-f835dd68b0d9
DisplayName: Resources on which an Account logged onto
Description: Resources on which an Account was logged on during a given time period based on SigninLogs (set time range to +-1d when running the query)
InputEntityType: Account
InputFields:
  - Name
OutputEntityTypes:
  - Host
QueryPeriodBefore: 1d
QueryPeriodAfter: 1d
DataSource:
  - SigninLogs
Tactics:
  - Persistence
  - Discovery
  - LateralMovement
  - Collection  
query: |
  let GetAllHostsbyAccount = (v_Account_Name:string){
  SigninLogs
  | extend v_Account_Name = case(
  v_Account_Name has '@', tostring(split(v_Account_Name, '@')[0]),
  v_Account_Name has '\\', tostring(split(v_Account_Name, '\\')[1]),
  v_Account_Name
  )
  | where UserPrincipalName contains v_Account_Name
  | extend RemoteHost = tolower(tostring(parsejson(DeviceDetail.['displayName'])))
  | extend OS = DeviceDetail.operatingSystem, Browser = DeviceDetail.browser
  | extend StatusCode = tostring(Status.errorCode), StatusDetails = tostring(Status.additionalDetails)
  | extend State = tostring(LocationDetails.state), City = tostring(LocationDetails.city)
  | extend info = pack('UserDisplayName', UserDisplayName, 'UserPrincipalName', UserPrincipalName, 'AppDisplayName', AppDisplayName, 'ClientAppUsed', ClientAppUsed, 'Browser', tostring(Browser), 'IPAddress', IPAddress, 'ResultType', ResultType, 'ResultDescription', ResultDescription, 'Location', Location, 'State', State, 'City', City, 'StatusCode', StatusCode, 'StatusDetails', StatusDetails)
  | summarize min(TimeGenerated), max(TimeGenerated), Host_Aux_info = makeset(info) by RemoteHost , tostring(OS)
  | project min_TimeGenerated, max_TimeGenerated, RemoteHost, OS, Host_Aux_info
  | top 10 by min_TimeGenerated desc nulls last 
  | project-rename Host_UnstructuredName=RemoteHost, Host_OSVersion=OS
  };
  // change <Name> value below
  GetAllHostsbyAccount('<Name>')